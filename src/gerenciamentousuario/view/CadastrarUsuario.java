/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gerenciamentousuario.view;

import gerenciamentousuario.controller.CargoController;
import gerenciamentousuario.controller.PerfilController;
import gerenciamentousuario.controller.UsuarioController;
import gerenciamentousuario.controller.UsuarioPerfilController;
import gerenciamentousuario.model.Cargo;
import gerenciamentousuario.model.Perfil;
import gerenciamentousuario.model.Usuario;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.MaskFormatter;

/**
 *
 * @author pedro-menezes
 */
public class CadastrarUsuario extends javax.swing.JFrame {

    /**
     * Creates new form CadastrarUsuario
     */
    public CadastrarUsuario(JFrame origem) throws ParseException {
        initComponents();
        origem.setEnabled(false);
        this.setVisible(true);
        addRadio();
        preencherCombo();
        preencherTabela();
        addMask();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        labelCpf = new javax.swing.JLabel();
        labelNome = new javax.swing.JLabel();
        labelSexo = new javax.swing.JLabel();
        labelCargo = new javax.swing.JLabel();
        labelNasc = new javax.swing.JLabel();
        textNome = new javax.swing.JTextField();
        radioM = new javax.swing.JRadioButton();
        radioF = new javax.swing.JRadioButton();
        comboCargo = new javax.swing.JComboBox<>();
        buttonCancelar = new javax.swing.JButton();
        buttonCadastrar = new javax.swing.JButton();
        labelTitulo = new javax.swing.JLabel();
        jSeparator = new javax.swing.JSeparator();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPerfis = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        textCpf = new javax.swing.JFormattedTextField();
        textNasc = new javax.swing.JFormattedTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        labelCpf.setText("CPF");

        labelNome.setText("Nome");

        labelSexo.setText("Sexo");

        labelCargo.setText("Cargo");

        labelNasc.setText("Data de Nascimento");

        radioM.setText("Masculino");
        radioM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                radioMActionPerformed(evt);
            }
        });

        radioF.setText("Feminino");

        buttonCancelar.setText("Cancelar");
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        buttonCadastrar.setText("Cadastrar");
        buttonCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCadastrarActionPerformed(evt);
            }
        });

        labelTitulo.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        labelTitulo.setText("Cadastra Usu√°rio");

        tabelaPerfis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Perfil", "Adicionar"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaPerfis);

        jLabel1.setText("Adicionar Perfis");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jSeparator)
                        .addGap(140, 140, 140)
                        .addComponent(jLabel1)
                        .addGap(90, 90, 90))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(labelTitulo)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(buttonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(buttonCadastrar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelCargo)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(comboCargo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(labelNasc)
                                        .addGap(6, 6, 6)
                                        .addComponent(textNasc))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(labelSexo)
                                                .addGap(18, 18, 18)
                                                .addComponent(radioM)
                                                .addGap(18, 18, 18)
                                                .addComponent(radioF))
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(labelNome)
                                                    .addComponent(labelCpf))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(textNome)
                                                    .addComponent(textCpf, javax.swing.GroupLayout.DEFAULT_SIZE, 241, Short.MAX_VALUE))))
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 17, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jSeparator, javax.swing.GroupLayout.PREFERRED_SIZE, 7, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelCpf)
                            .addComponent(textCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelNome)
                            .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelSexo)
                            .addComponent(radioM)
                            .addComponent(radioF))
                        .addGap(53, 53, 53)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelNasc)
                            .addComponent(textNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(comboCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelCargo)))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 276, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancelar)
                    .addComponent(buttonCadastrar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void radioMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_radioMActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_radioMActionPerformed

    private void buttonCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCadastrarActionPerformed
        try {
            Usuario usuario = new Usuario(getCpf(), textNome.getText(), new java.sql.Date(converteData(textNasc.getText()).getTime()), radioSelecionado());
            new UsuarioController().adiciona(usuario, new Cargo(comboCargo.getSelectedItem().toString()));

            addPerfis(usuario);
        } catch (ParseException ex) {
            Logger.getLogger(CadastrarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_buttonCadastrarActionPerformed

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCancelarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCadastrar;
    private javax.swing.JButton buttonCancelar;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JComboBox<String> comboCargo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator;
    private javax.swing.JLabel labelCargo;
    private javax.swing.JLabel labelCpf;
    private javax.swing.JLabel labelNasc;
    private javax.swing.JLabel labelNome;
    private javax.swing.JLabel labelSexo;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JRadioButton radioF;
    private javax.swing.JRadioButton radioM;
    private javax.swing.JTable tabelaPerfis;
    private javax.swing.JFormattedTextField textCpf;
    private javax.swing.JFormattedTextField textNasc;
    private javax.swing.JTextField textNome;
    // End of variables declaration//GEN-END:variables

    private char radioSelecionado() {
        if (radioF.isSelected()) {
            return 'F';
        } else {
            return 'M';
        }
    }

    private Date converteData(String texto) throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat("dd/MM/yyyy");
        Date aux = sdf.parse(texto);
        sdf.applyPattern("yyyy/MM/dd");
        String r = sdf.format(aux);
        return sdf.parse(r);
    }

    private void addRadio() {
        buttonGroup.add(radioF);
        buttonGroup.add(radioM);
    }

    private void preencherCombo() {
        for (Cargo cargo : new CargoController().lista()) {
            comboCargo.addItem(cargo.getNome());
        }
    }

    private void preencherTabela() {
        DefaultTableModel modelo = (DefaultTableModel) tabelaPerfis.getModel();
        modelo.setNumRows(0);

        for (Perfil perfil : new PerfilController().lista()) {
            modelo.addRow(new Object[]{
                perfil.getNome()
            });
        }
    }

    private void addPerfis(Usuario usuario) {
        ArrayList<String> nomesPerfis = new ArrayList<>();
        int linhas = tabelaPerfis.getRowCount();

        for (int i = 0; i < linhas; i++) {
            if (((Boolean) tabelaPerfis.getValueAt(i, 1)) != null) {
                nomesPerfis.add(String.valueOf(tabelaPerfis.getValueAt(i, 0)));
            }
        }

        UsuarioPerfilController usuPerController = new UsuarioPerfilController();
        for (String nomePerfil : nomesPerfis) {
                usuPerController.adiciona(new PerfilController().busca(nomePerfil), usuario);
        }
    }

    private void addMask() throws ParseException {
        MaskFormatter CPFMask = new MaskFormatter("###.###.###-##");
        MaskFormatter dataMask = new MaskFormatter("##/##/####");
        CPFMask.setValidCharacters("0123456789");
        dataMask.setValidCharacters("0123456789");

        textCpf.setValue(null);
        textCpf.setFormatterFactory(new DefaultFormatterFactory(CPFMask));
        textNasc.setValue(null);
        textNasc.setFormatterFactory(new DefaultFormatterFactory(dataMask));
    }

    private String getCpf() {
        String cpf = textCpf.getText().replace(".", "");
        cpf = cpf.replace("-", "");
        return cpf;
    }
}
