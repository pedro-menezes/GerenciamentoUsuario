/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gerenciamentousuario.view;

import gerenciamentousuario.controller.CargoController;
import gerenciamentousuario.controller.PerfilController;
import gerenciamentousuario.controller.UsuarioController;
import gerenciamentousuario.controller.UsuarioPerfilController;
import gerenciamentousuario.model.Cargo;
import gerenciamentousuario.model.Perfil;
import gerenciamentousuario.model.Usuario;
import java.sql.Date;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pedro-menezes
 */
public class EditarUsuario extends JFrame {

    JFrame origem;

    /**
     * Creates new form EditarUsuario
     */
    public EditarUsuario(JFrame origem) {
        initComponents();
        preencherComboCpf();
        addRadio();
        this.origem = origem;
        this.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        comboCpf = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        radioM = new javax.swing.JRadioButton();
        radioF = new javax.swing.JRadioButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        comboCargo = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        labelDataCadastro = new javax.swing.JLabel();
        buttonCancelar = new javax.swing.JButton();
        buttonConfirmar = new javax.swing.JButton();
        textNome = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaPerfis = new javax.swing.JTable();
        jLabel6 = new javax.swing.JLabel();
        textDataNasc = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Editar Usu√°rio");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("Editar Usuario");

        jLabel2.setText("CPF:");

        comboCpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboCpfActionPerformed(evt);
            }
        });

        jLabel3.setText("Nome:");

        jLabel4.setText("Sexo:");

        radioM.setText("Masculino");

        radioF.setText("Feminino");

        jLabel5.setText("Data de Nascimento:");

        jLabel7.setText("Cargo:");

        jLabel8.setText("Data de Cadastro:");

        labelDataCadastro.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N

        buttonCancelar.setText("Cancelar");
        buttonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCancelarActionPerformed(evt);
            }
        });

        buttonConfirmar.setText("Confirmar");
        buttonConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonConfirmarActionPerformed(evt);
            }
        });

        tabelaPerfis.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Nome", "Adicionar/Remover"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Boolean.class
            };
            boolean[] canEdit = new boolean [] {
                false, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tabelaPerfis);

        jLabel6.setText("Perfis");

        textDataNasc.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(comboCargo, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(radioM)
                                .addGap(18, 18, 18)
                                .addComponent(radioF)
                                .addGap(0, 43, Short.MAX_VALUE))
                            .addComponent(comboCpf, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(textNome)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(textDataNasc))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel8)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addComponent(labelDataCadastro))
                        .addComponent(buttonCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 267, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(108, 108, 108))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(buttonConfirmar, javax.swing.GroupLayout.DEFAULT_SIZE, 255, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(comboCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(textNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(radioM)
                            .addComponent(radioF))
                        .addGap(35, 35, 35)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(textDataNasc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(comboCargo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(labelDataCadastro))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancelar)
                    .addComponent(buttonConfirmar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comboCpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboCpfActionPerformed
        preencherTabela();
        atualizarInfos();
        preencherComboCargo();
    }//GEN-LAST:event_comboCpfActionPerformed

    private void buttonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_buttonCancelarActionPerformed

    private void buttonConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonConfirmarActionPerformed
        try {
            Usuario usuario = new Usuario(comboCpf.getSelectedItem().toString(), textNome.getText(), new java.sql.Date(converteData(textDataNasc.getText()).getTime()), radioSelecionado());
            usuario.setCargo(new Cargo(comboCargo.getSelectedItem().toString()));
            new UsuarioController().editar(usuario);
            configuraPerfis(usuario);
            JOptionPane.showMessageDialog(this, "Atualizado com sucesso", "Editar Usu√°rio", JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        } catch (ParseException ex) {
            JOptionPane.showMessageDialog(this, "Atualizado com sucesso", "Editar Usu√°rio", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(EditarUsuario.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonConfirmarActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonConfirmar;
    private javax.swing.ButtonGroup buttonGroup;
    private javax.swing.JComboBox<String> comboCargo;
    private javax.swing.JComboBox<String> comboCpf;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel labelDataCadastro;
    private javax.swing.JRadioButton radioF;
    private javax.swing.JRadioButton radioM;
    private javax.swing.JTable tabelaPerfis;
    private javax.swing.JTextField textDataNasc;
    private javax.swing.JTextField textNome;
    // End of variables declaration//GEN-END:variables

    private void addRadio() {
        buttonGroup.add(radioF);
        buttonGroup.add(radioM);
    }

    private void preencherComboCargo() {
        Usuario usuario = new UsuarioController().busca(comboCpf.getSelectedItem().toString());
        for (Cargo cargo : new CargoController().lista()) {
            comboCargo.addItem(cargo.getNome());
            if (usuario.getCargo().equals(cargo)) {
                comboCargo.setSelectedItem(cargo.getNome());
            }
        }
    }

    private void preencherComboCpf() {
        for (Usuario usuario : new UsuarioController().lista()) {
            comboCpf.addItem(usuario.getCpf());
        }
    }

    private void preencherTabela() {
        DefaultTableModel modelo = (DefaultTableModel) tabelaPerfis.getModel();
        modelo.setNumRows(0);

        Usuario usuario = new Usuario();
        usuario.setCpf(comboCpf.getSelectedItem().toString());
        new UsuarioPerfilController().buscaPerfis(usuario);

        for (Perfil perfil : new PerfilController().lista()) {
            boolean contemPerfil = false;
            if (usuario.verificaPerfil(perfil)) {
                contemPerfil = true;
            }
            modelo.addRow(new Object[]{
                perfil.getNome(),
                contemPerfil
            });
        }
    }

    private void atualizarInfos() {
        Usuario usuario = new UsuarioController().busca(comboCpf.getSelectedItem().toString());

        textNome.setText(usuario.getNome());
        textDataNasc.setText(usuario.getDataNascimento().toString());

        if (usuario.getSexo() == 'M') {
            radioM.setSelected(true);
            radioF.setSelected(false);
        } else {
            radioF.setSelected(true);
            radioM.setSelected(false);
        }
    }

    private java.util.Date converteData(String texto) throws ParseException {
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        java.util.Date aux = sdf.parse(texto);
        sdf.applyPattern("yyyy/MM/dd");
        String r = sdf.format(aux);
        return sdf.parse(r);
    }

    private char radioSelecionado() {
        if (radioF.isSelected()) {
            return 'F';
        } else {
            return 'M';
        }
    }

    private void configuraPerfis(Usuario usuario) {
        ArrayList<String> perfisAdd = new ArrayList<>();
        ArrayList<String> perfisRemove = new ArrayList<>();
        int linhas = tabelaPerfis.getRowCount();

        for (int i = 0; i < linhas; i++) {
            if (((Boolean) tabelaPerfis.getValueAt(i, 1)) == true) {
                perfisAdd.add(String.valueOf(tabelaPerfis.getValueAt(i, 0)));
            } else {
                perfisRemove.add(String.valueOf(tabelaPerfis.getValueAt(i, 0)));
            }
        }

        UsuarioPerfilController usuPerController = new UsuarioPerfilController();
        for (String nomePerfil : perfisAdd) {
            if (!usuPerController.existe(usuario.getCpf(), nomePerfil)) {
                usuPerController.adiciona(new PerfilController().busca(nomePerfil), usuario);
            }
        }
        
        for (String nomePerfil : perfisRemove) {
            usuPerController.deleta(usuario.getCpf(), nomePerfil);
        }
    }
}
